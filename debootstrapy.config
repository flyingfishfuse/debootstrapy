[Thing To Do]
choice = default

[DEFAULT]
sand_hostname = Test
user = testuser
password = password
extra_extra = nginx,dnsmasq
sand_mac = de:ad:be:ef:ca:fe
sand_ip = 192.168.0.3
sand_iface = sandbox0
sandy_netmask = /24
sandy_path = /home/user/Desktop/sandbox/
arch = amd64
repository = http://archive.ubuntu.com/ubuntu/
components = main,contrib,universe,multiverse
log_file = /home/user/Desktop/debootstrapy.log
host_iface = eth0
internal_ip = 192.168.0.2
gateway = 192.168.0.1

[debian]

[ubuntu]

[mint]


                                 dest    = 'user',
                                 default = "derp" ,
                                 help    = "The username to be created" )
                                 dest    = 'password',
                                 default = 'password' ,
                                 help    = "The password to said username" )
                                 dest    = 'extra_extra',
                                 action  = "store" ,
                                 default = 'micro' ,
                                 help    = "comma seperated list of extra packages to install" )
	parser.add_argument('--sandbox-hostname',
                                 dest    = 'sand_hostname',
                                 action  = "store" ,
                                 default = 'sandbox' ,
                                 help    = "Hostname of the Sandbox" )
	parser.add_argument('--sandbox-mac',
                                 dest    = 'sand_mac',
                                 action  = "store" ,
                                 default = 'de:ad:be:ef:ca:fe' ,
                                 help    = "MAC Address of the Sandbox" )
	parser.add_argument('--sandbox-ip',
                                 dest    = 'sand_ip',
                                 action  = "store" ,
                                 default = '192.168.0.3' ,
                                 help    = "IP Address of the Sandbox" )							
	parser.add_argument('--sandbox-interface',
                                 dest    = 'sand_iface',
                                 action  = "store" ,
                                 default = 'hack1' ,
                                 help    = "Interface name for the Sandbox" )
	parser.add_argument('--sandbox-netmask',
                                 dest    = 'sandy_netmask',
                                 action  = "store" ,
                                 default = '/24' ,
                                 help    = 'Netmask for the sandbox in slash notation, e.g. "/24"' )
	parser.add_argument('--sandbox-path',
                                 dest    = 'sandy_path',
                                 action  = "store" ,
                                 default = '/home/moop/Desktop/sandbox' ,
                                 help    = "Full Path of the Sandbox" )
	parser.add_argument('--arch',
                                 dest    = 'arch',
                                 action  = "store" ,
                                 default = 'amd64' ,
                                 help    = "AMD64, X86, ARM, what-have-you" )
	parser.add_argument('--components',
                                 dest    = 'components',
                                 action  = "store" ,
                                 default = 'main,contrib,universe,multiverse' ,
                                 help    = "Which repository components are included" )
	parser.add_argument('--repository',
                                 dest    = 'repository',
                                 action  = "store" ,
                                 default = "http://archive.ubuntu.com/ubuntu/" ,
                                 help    = 'The Debian-based repository. E.g. "Ubuntu"' )		
	parser.add_argument('--logfile',
                                 dest    = 'log_file',
                                 action  = "store" ,
                                 default = "'./debootstrap_log.txt'" ,
                                 help    = 'logfile name' )
	parser.add_argument('--host-interface',
                                 dest    = 'host_iface',
                                 action  = "store" ,
                                 default = "eth0" ,
                                 help    = 'Host network interface to use' )
	parser.add_argument('--internal-ip',
                                 dest    = 'internal_ip',
                                 action  = "store" ,
                                 default = "192.168.0.1" ,
                                 help    = 'Host IP address on the chosen interface' )
	parser.add_argument('--network-gateway',
                                 dest    = 'gateway',
                                 action  = "store" ,
                                 default = "192.168.0.1" ,
                                 help    = 'Network Gateway IP' )